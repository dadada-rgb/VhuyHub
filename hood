local a = game:GetService("Players")
local b = game:GetService("RunService")
local c = game:GetService("StarterGui")
local d = game:GetService("Workspace")
local e = game:GetService("UserInputService")
local f = game:GetService("VirtualInputManager")
local g = a.LocalPlayer
local h = d.CurrentCamera
local i = { r = 800, t = false, u = "HumanoidRootPart", v = {}, w = true, ab = { ac = 0, ad = 0 }, ae = 15, af = 0 }
local j = {}
local k = {}
local l = false
local m = {}
local isCameraToggled = false
local autoSelect = false

-- Khởi tạo ScreenGui cho ESP
local espGui = Instance.new("ScreenGui")
espGui.Name = "SafeESP"
espGui.ResetOnSpawn = false
espGui.IgnoreGuiInset = true
espGui.Parent = g:WaitForChild("PlayerGui")

local function p(q)
    return q and q.Character and q.Character:FindFirstChild("Humanoid") and q.Character:FindFirstChild("HumanoidRootPart")
end

local function r(s, t)
    local u = s:Connect(t)
    table.insert(j, u)
    return u
end

local function aa(ab)
    if not ab or not ab.Parent then return false end
    local ac = ab:FindFirstChild("BodyEffects")
    local ad = ac and ac:FindFirstChild("K.O") and ac["K.O"].Value
    local ae = ab:FindFirstChild("GRABBING_CONSTRAINT") ~= nil
    return not (ad or ae)
end

local function createESP(player)
    if k[player] then return end
    local label = Instance.new("TextLabel")
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.fromRGB(200, 200, 200)
    label.TextSize = 14
    label.Font = Enum.Font.GothamBlack
    label.Text = player.DisplayName
    label.TextStrokeTransparency = 0.7
    label.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    label.Size = UDim2.new(0, 200, 0, 20)
    label.AnchorPoint = Vector2.new(0.5, 0.5)
    label.Position = UDim2.new(0.5, 0, 0.5, 0)
    label.Visible = false
    label.Parent = espGui

    local highlight = Instance.new("Highlight")
    highlight.Enabled = false
    highlight.FillTransparency = 0.7
    highlight.OutlineTransparency = 0.3
    highlight.FillColor = Color3.fromRGB(200, 200, 200)
    highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
    highlight.Adornee = player.Character
    highlight.Parent = espGui

    k[player] = { label = label, highlight = highlight }
end

local function removeESP(player)
    if k[player] then
        pcall(function()
            k[player].label:Destroy()
            k[player].highlight:Destroy()
        end)
        k[player] = nil
    end
end

local function aj()
    if not i.w then
        for _, v in pairs(k) do
            v.label.Visible = false
            v.highlight.Enabled = false
        end
        return
    end
    for _, player in ipairs(a:GetPlayers()) do
        if player ~= g and p(player) then
            local character = player.Character
            local head = character:FindFirstChild("Head")
            if head then
                createESP(player)
                local headPos = head.Position
                local screenPos, onScreen = h:WorldToViewportPoint(headPos)
                local esp = k[player]
                if esp then
                    local isSelected = i.v[player.Name]
                    esp.label.TextColor3 = isSelected and Color3.fromRGB(255, 179, 186) or Color3.fromRGB(200, 200, 200)
                    esp.highlight.FillColor = isSelected and Color3.fromRGB(255, 179, 186) or Color3.fromRGB(200, 200, 200)
                    if onScreen then
                        esp.label.Visible = true
                        esp.label.Position = UDim2.new(0, screenPos.X, 0, screenPos.Y - 20)
                        esp.highlight.Enabled = true
                    else
                        esp.label.Visible = false
                        esp.highlight.Enabled = false
                    end
                end
            else
                removeESP(player)
            end
        else
            removeESP(player)
        end
    end
end

local function av(aw)
    if not aw or not aw.Parent then return false end
    local ax = aw.Parent
    local ay = ax:FindFirstChild("Humanoid")
    local az = a:GetPlayerFromCharacter(ax)
    return ay and az
end

local function ba()
    local bb, bc = pcall(function()
        local bd = e:GetMouseLocation()
        local be = math.random(100, 450) / 1000
        f:SendMouseButtonEvent(bd.X, bd.Y, 0, true, game, 0)
        task.wait(be)
        f:SendMouseButtonEvent(bd.X, bd.Y, 0, false, game, 0)
    end)
end

local function bf()
    local bg, bh = nil, math.huge
    for _, bi in ipairs(a:GetPlayers()) do
        if bi ~= g and p(bi) and i.v[bi.Name] then
            local bj = bi.Character
            local bk = bj:FindFirstChild(i.u)
            local bl = bj:FindFirstChild("BodyEffects")
            local bm = bl and bl:FindFirstChild("K.O") and bl["K.O"].Value
            local bn = bj:FindFirstChild("GRABBING_CONSTRAINT") ~= nil
            if bk and not bm and not bn then
                local bo = g.Character
                local bp = bo and bo:FindFirstChild("HumanoidRootPart")
                if bp then
                    local bq = (bp.Position - bk.Position).Magnitude
                    if bq < bh and bq <= i.r then
                        local br = RaycastParams.new()
                        br.FilterType = Enum.RaycastFilterType.Blacklist
                        br.FilterDescendantsInstances = {g.Character}
                        local bs = d:Raycast(h.CFrame.Position, (bk.Position - h.CFrame.Position), br)
                        if bs and bs.Instance and bs.Instance:IsDescendantOf(bj) then
                            bg = bk
                            bh = bq
                        end
                    end
                end
            end
        end
    end
    return bg
end

local bt = Instance.new("ScreenGui")
bt.Parent = g:WaitForChild("PlayerGui", 5)
bt.Name = tostring(math.random(1e6, 1e7))
bt.ResetOnSpawn = false
bt.Enabled = true
local bu = Instance.new("Frame")
bu.Size = UDim2.new(0, 120, 0, 160)
bu.Position = UDim2.new(0.1, 0, 0.3, 0)
bu.BackgroundColor3 = Color3.fromRGB(255, 179, 186)
bu.BackgroundTransparency = 0
bu.Active = true
bu.Draggable = true
bu.Parent = bt
local bv = Instance.new("UICorner")
bv.CornerRadius = UDim.new(0, 8)
bv.Parent = bu
local bw = Instance.new("TextLabel")
bw.Size = UDim2.new(1, 0, 0, 18)
bw.BackgroundColor3 = Color3.fromRGB(255, 179, 186)
bw.Text = "VhuyHub"
bw.TextColor3 = Color3.fromRGB(0, 0, 0)
bw.Font = Enum.Font.SourceSans
bw.TextSize = 12
bw.Parent = bu
local bx = Instance.new("UICorner")
bx.CornerRadius = UDim.new(0, 8)
bx.Parent = bw
local by = Instance.new("ScrollingFrame")
by.Size = UDim2.new(1, -4, 1, -22)
by.Position = UDim2.new(0, 2, 0, 20)
by.CanvasSize = UDim2.new(0, 0, 0, 0)
by.ScrollBarThickness = 3
by.BackgroundTransparency = 1
by.Parent = bu
local bz = Instance.new("UIListLayout")
bz.SortOrder = Enum.SortOrder.LayoutOrder
bz.Padding = UDim.new(0, 3)
bz.Parent = by
bz:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
    by.CanvasSize = UDim2.new(0, 0, 0, bz.AbsoluteContentSize.Y)
end)

local function selectAllPlayers()
    for _, player in ipairs(a:GetPlayers()) do
        if player ~= g then
            i.v[player.Name] = true
        end
    end
    cc()
end

local function deselectAllPlayers()
    for _, player in ipairs(a:GetPlayers()) do
        if player ~= g then
            i.v[player.Name] = nil
        end
    end
    cc()
end

r(e.InputBegan, function(ca, cb)
    if cb then return end
    if ca.KeyCode == Enum.KeyCode.RightShift then
        bt.Enabled = not bt.Enabled
    elseif ca.UserInputType == Enum.UserInputType.MouseButton2 and p(g) then
        local ci = g.Character
        if ci and ci:FindFirstChildOfClass("Tool") then
            i.t = true
        end
    elseif ca.UserInputType == Enum.UserInputType.MouseButton3 then
        local mouseTarget = g:GetMouse().Target
        if mouseTarget and isValidPart(mouseTarget) then
            local targetPlayer = a:GetPlayerFromCharacter(mouseTarget.Parent)
            if targetPlayer and targetPlayer ~= g then
                i.v[targetPlayer.Name] = not i.v[targetPlayer.Name] and true or nil
                cc()
            end
        end
    elseif ca.KeyCode == Enum.KeyCode.T then
        i.w = not i.w
    elseif ca.KeyCode == Enum.KeyCode.Y then
        autoSelect = not autoSelect
        if autoSelect then
            selectAllPlayers()
        else
            deselectAllPlayers()
        end
    end
end)

r(e.InputEnded, function(ca)
    if ca.UserInputType == Enum.UserInputType.MouseButton2 then
        i.t = false
    end
end)

r(b.RenderStepped, aj)

r(a.PlayerAdded, function(cx)
    task.wait(math.random(2, 3))
    removeESP(cx)
    if autoSelect then
        i.v[cx.Name] = true
        cc()
    end
end)

r(a.PlayerRemoving, function(cx)
    removeESP(cx)
    i.v[cx.Name] = nil
    cc()
end)

r(b.Heartbeat, function()
    if isCameraToggled then
        local delay = math.random(50, 200) / 1000
        g.CameraMinZoomDistance = 0.5
        g.CameraMode = Enum.CameraMode.LockFirstPerson
        task.wait(delay)
        g.CameraMode = Enum.CameraMode.Classic
        g.CameraMinZoomDistance = 5
        task.wait(delay)
    else
        g.CameraMinZoomDistance = 0.5
        g.CameraMode = Enum.CameraMode.Classic
    end
    if i.t then
        if not l then l = os.clock() end
        if os.clock() - l >= math.random(45, 55) then
            i.u = ({"Head", "HumanoidRootPart"})[math.random(1, 2)]
            l = os.clock()
        end
        local co = bf()
        if co and co.Parent then
            local cp = co.Position + (co.Parent:FindFirstChild(i.u) and co.Parent:FindFirstChild(i.u).Velocity * Vector3.new(i.ab.ac, i.ab.ad, i.ab.ac) or Vector3.zero)
            h.CFrame = CFrame.new(h.CFrame.Position, cp)
        end
    end
end)

local function cc()
    for _, cd in pairs(by:GetChildren()) do
        if cd:IsA("TextButton") then cd:Destroy() end
    end
    for _, ce in ipairs(a:GetPlayers()) do
        if ce ~= g then
            local cf = Instance.new("TextButton")
            cf.Size = UDim2.new(1, -4, 0, 18)
            cf.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            cf.BackgroundTransparency = 0.2
            cf.TextColor3 = Color3.fromRGB(0, 0, 0)
            cf.TextSize = 12
            cf.Font = Enum.Font.SourceSans
            cf.AutoButtonColor = false
            cf.Parent = by
            local function cg()
                local ch = i.v[ce.Name]
                cf.Text = (ch and "✓ " or "") .. ce.DisplayName
            end
            cf.MouseButton1Click:Connect(function()
                if i.v[ce.Name] then
                    i.v[ce.Name] = nil
                else
                    i.v[ce.Name] = true
                end
                cg()
            end)
            cg()
        end
    end
end

r(a.PlayerAdded, cc)
r(a.PlayerRemoving, cc)

task.spawn(function()
    while true do
        cc()
        task.wait(math.random(12, 15))
    end
end)

local validParts = {
    "Head",
    "HumanoidRootPart",
    "UpperTorso",
    "LowerTorso",
    "LeftUpperArm",
    "LeftLowerArm",
    "LeftHand",
    "RightUpperArm",
    "RightLowerArm",
    "RightHand",
    "LeftUpperLeg",
    "LeftLowerLeg",
    "LeftFoot",
    "RightUpperLeg",
    "RightLowerLeg",
    "RightFoot"
}

local function isValidPart(part)
    if not part or not part.Parent or not part.Parent:FindFirstChild("Humanoid") then return false end
    for _, name in ipairs(validParts) do
        if part.Name:lower() == name:lower() then return true end
    end
    return false
end

local function distToCursor(part)
    local viewportPos, onScreen = h:WorldToViewportPoint(part.Position)
    if not onScreen then return math.huge end
    local mousePos = e:GetMouseLocation()
    return (Vector2.new(viewportPos.X, viewportPos.Y) - Vector2.new(mousePos.X, mousePos.Y)).Magnitude
end

local lastShot = 0
local cooldown = 0.1

r(b.RenderStepped, function()
    if not p(g) then return end
    local ci = g.Character
    local cm = false
    for _, cn in pairs(ci:GetChildren()) do
        if cn:IsA("Tool") then cm = true break end
    end
    if not cm then return end
    local mouseTarget = g:GetMouse().Target
    if mouseTarget and isValidPart(mouseTarget) and distToCursor(mouseTarget) <= i.r and os.clock() - lastShot >= cooldown then
        local targetPlayer = a:GetPlayerFromCharacter(mouseTarget.Parent)
        if targetPlayer and i.v[targetPlayer.Name] then
            ba()
            lastShot = os.clock()
        end
    end
end)

local function cx()
    for _, cy in pairs(j) do pcall(function() cy:Disconnect() end) end
    for _, cz in pairs(k) do
        pcall(function()
            cz.label:Destroy()
            cz.highlight:Destroy()
        end)
    end
    pcall(function() if bt and bt.Parent then bt:Destroy() end end)
    pcall(function() if espGui and espGui.Parent then espGui:Destroy() end end)
    i.t, i.w = false, false
end

game:BindToClose(cx)

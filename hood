local a = game:GetService("Players")
local b = game:GetService("RunService")
local c = game:GetService("StarterGui")
local d = game:GetService("Workspace")
local e = game:GetService("UserInputService")
local f = game:GetService("VirtualInputManager")
local g = a.LocalPlayer
local h = d.CurrentCamera
local i = { r = 500, t = false, u = "HumanoidRootPart", v = {}, w = false, ab = { ac = 0.14, ad = 0.08 }, ae = 15, af = 0 }
local j = {}
local k = {}
local l = false
local m = {}

local function p(q)
    return q and q.Character and q.Character:FindFirstChild("Humanoid") and q.Character:FindFirstChild("HumanoidRootPart")
end

local function r(s, t)
    local u = s:Connect(t)
    table.insert(j, u)
    return u
end

local function v(w, x)
    local y, z = pcall(function()
        local aa = Drawing.new(w)
        for ab, ac in pairs(x) do aa[ab] = ac end
        return aa
    end)
    if not y then return nil end
    return z
end

local function aa(ab)
    if not ab then return false end
    local ac = ab:FindFirstChild("BodyEffects")
    local ad = ac and ac:FindFirstChild("K.O") and ac["K.O"].Value
    local ae = ab:FindFirstChild("GRABBING_CONSTRAINT") ~= nil
    return not (ad or ae)
end

local function af(ag)
    if k[ag] then
        pcall(function()
            k[ag].ah:Remove()
            k[ag].ai:Remove()
        end)
        k[ag] = nil
    end
    local ah = v("Square", { Visible = false, Color = Color3.fromRGB(180, 180, 180), Thickness = 1, Transparency = 0.8, Filled = false })
    local ai = v("Text", { Visible = false, Color = Color3.fromRGB(180, 180, 180), Size = 12, Center = true, Outline = true, Font = Drawing.Fonts.UI, Text = ag.DisplayName })
    if ah and ai then k[ag] = { ah = ah, ai = ai } end
end

local function aj()
    if not i.w then
        for _, ak in pairs(k) do
            pcall(function() ak.ah.Visible = false ak.ai.Visible = false end)
        end
        return
    end
    for _, al in ipairs(a:GetPlayers()) do
        if al ~= g and p(al) then
            local am = al.Character
            local an, ao = am:FindFirstChild("HumanoidRootPart"), am:FindFirstChild("Head")
            if an and ao then
                local ap, aq = h:WorldToViewportPoint(ao.Position)
                local ar = h:WorldToViewportPoint(an.Position)
                if not k[al] then af(al) end
                if k[al] then
                    local ak = k[al]
                    local as = i.v[al.Name]
                    ak.ah.Color = as and Color3.fromRGB(255, 179, 186) or Color3.fromRGB(180, 180, 180)
                    ak.ai.Color = as and Color3.fromRGB(255, 179, 186) or Color3.fromRGB(180, 180, 180)
                    if aq and aa(am) then
                        local at = math.abs(ap.Y - ar.Y) * 1.1
                        local au = at * 0.5
                        ak.ah.Size = Vector2.new(au, at)
                        ak.ah.Position = Vector2.new(ar.X - au / 2, ar.Y - at / 2)
                        ak.ah.Visible = true
                        ak.ai.Position = Vector2.new(ap.X, ap.Y - 20)
                        ak.ai.Visible = true
                    else
                        ak.ah.Visible = false
                        ak.ai.Visible = false
                    end
                end
            elseif k[al] then
                pcall(function() k[al].ah:Remove() k[al].ai:Remove() end)
                k[al] = nil
            end
        elseif k[al] then
            pcall(function() k[al].ah:Remove() k[al].ai:Remove() end)
            k[al] = nil
        end
    end
end

local function av(aw)
    if not aw or not aw.Parent then return false end
    local ax = aw.Parent
    local ay = ax:FindFirstChild("Humanoid")
    local az = a:GetPlayerFromCharacter(ax)
    return ay and az and aw.Name == i.u
end
local function ba()
    local bb, bc = pcall(function()
        local bd = e:GetMouseLocation()
        local be = math.random(350, 450) / 1000
        f:SendMouseButtonEvent(bd.X, bd.Y, 0, true, game, 0)
        task.wait(be)
        f:SendMouseButtonEvent(bd.X, bd.Y, 0, false, game, 0)
    end)
end

local function bf()
    local bg, bh = nil, math.huge
    for _, bi in ipairs(a:GetPlayers()) do
        if bi ~= g and p(bi) and i.v[bi.Name] then
            local bj = bi.Character
            local bk = bj:FindFirstChild(i.u)
            local bl = bj:FindFirstChild("BodyEffects")
            local bm = bl and bl:FindFirstChild("K.O") and bl["K.O"].Value
            local bn = bj:FindFirstChild("GRABBING_CONSTRAINT") ~= nil
            if bk and not bm and not bn then
                local bo = g.Character
                local bp = bo and bo:FindFirstChild("HumanoidRootPart")
                if bp then
                    local bq = (bp.Position - bk.Position).Magnitude
                    if bq < bh and bq <= i.r then
                        local br = RaycastParams.new()
                        br.FilterType = Enum.RaycastFilterType.Blacklist
                        br.FilterDescendantsInstances = {g.Character}
                        local bs = d:Raycast(h.CFrame.Position, (bk.Position - h.CFrame.Position), br)
                        if bs and bs.Instance:IsDescendantOf(bj) then
                            bg = bk
                            bh = bq
                        end
                    end
                end
            end
        end
    end
    return bg
end

local bt = Instance.new("ScreenGui")
local bu = Instance.new("Frame")
local bv = Instance.new("UICorner")
local bw = Instance.new("TextLabel")
local bx = Instance.new("UICorner")
local by = Instance.new("ScrollingFrame")
local bz = Instance.new("UIListLayout")

bt.Parent = g:WaitForChild("PlayerGui", 5)
bt.Name = tostring(math.random(1e6, 1e7))
bt.ResetOnSpawn = false
bt.Enabled = false

bu.Size = UDim2.new(0, 120, 0, 160)
bu.Position = UDim2.new(0.1, 0, 0.3, 0)
bu.BackgroundColor3 = Color3.fromRGB(255, 179, 186)
bu.BackgroundTransparency = 1
bu.Active = true
bu.Draggable = true
bu.Parent = bt

bv.CornerRadius = UDim.new(0, 8)
bv.Parent = bu

bw.Size = UDim2.new(1, 0, 0, 18)
bw.BackgroundColor3 = Color3.fromRGB(255, 179, 186)
bw.Text = ""
bw.TextColor3 = Color3.fromRGB(0, 0, 0)
bw.Font = Enum.Font.SourceSans
bw.TextSize = 12
bw.Parent = bu

bx.CornerRadius = UDim.new(0, 8)
bx.Parent = bw

by.Size = UDim2.new(1, -4, 1, -22)
by.Position = UDim2.new(0, 2, 0, 20)
by.CanvasSize = UDim2.new(0, 0, 0, 0)
by.ScrollBarThickness = 3
by.BackgroundTransparency = 1
by.Parent = bu

bz.SortOrder = Enum.SortOrder.LayoutOrder
bz.Padding = UDim.new(0, 3)
bz.Parent = by
bz:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
    by.CanvasSize = UDim2.new(0, 0, 0, bz.AbsoluteContentSize.Y)
end)

r(e.InputBegan, function(ca, cb)
    if cb then return end
    if ca.KeyCode == Enum.KeyCode.RightShift then
        bt.Enabled = not bt.Enabled
    elseif ca.UserInputType == Enum.UserInputType.MouseButton2 and p(g) then
        local ci = g.Character
        local co = bf()
        if co and ci:FindFirstChildOfClass("Tool") then
            local cq = (h.CFrame.Position - co.Position).Magnitude
            if cq <= i.r then
                i.t = true
            end
        end
    elseif ca.KeyCode == Enum.KeyCode.K then
        i.w = not i.w
    end
end)

r(e.InputEnded, function(ca)
    if ca.UserInputType == Enum.UserInputType.MouseButton2 then
        i.t = false
    end
end)

r(b.RenderStepped, aj)

r(a.PlayerAdded, function(cx)
    task.wait(math.random(2, 3))
    if k[cx] then
        pcall(function() k[cx].ah:Remove() k[cx].ai:Remove() end)
        k[cx] = nil
    end
end)

r(a.PlayerRemoving, function(cx)
    if k[cx] then
        pcall(function() k[cx].ah:Remove() k[cx].ai:Remove() end)
        k[cx] = nil
    end
end)

r(b.Heartbeat, function()
    if i.t then
        if not l then l = os.clock() end
        if os.clock() - l >= math.random(45, 55) then
            i.u = ({"Head", "HumanoidRootPart"})[math.random(1, 2)]
            l = os.clock()
        end
    end
end)

local function cc()
    for _, cd in pairs(by:GetChildren()) do
        if cd:IsA("TextButton") then cd:Destroy() end
    end
    for _, ce in ipairs(a:GetPlayers()) do
        if ce ~= g then
            local cf = Instance.new("TextButton")
            cf.Size = UDim2.new(1, -4, 0, 18)
            cf.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            cf.BackgroundTransparency = 0.2
            cf.TextColor3 = Color3.fromRGB(0, 0, 0)
            cf.TextSize = 12
            cf.Font = Enum.Font.SourceSans
            cf.AutoButtonColor = false
            cf.Parent = by
            local function cg()
                local ch = i.v[ce.Name]
                cf.Text = (ch and "✓ " or "") .. ce.DisplayName
            end
            cf.MouseButton1Click:Connect(function()
                if i.v[ce.Name] then
                    i.v[ce.Name] = nil
                else
                    i.v[ce.Name] = true
                end
                cg()
            end)
            cg()
        end
    end
end

r(a.PlayerAdded, cc)
r(a.PlayerRemoving, cc)

task.spawn(function()
    while true do
        cc()
        task.wait(math.random(12, 15))
    end
end)

r(b.RenderStepped, function()
    if not i.t or not p(g) then return end
    local ci = g.Character
    local cj = ci:FindFirstChild("BodyEffects")
    local ck = cj and cj:FindFirstChild("K.O") and cj["K.O"].Value
    local cl = ci:FindFirstChild("GRABBING_CONSTRAINT") ~= nil
    if ck or cl then i.t = false return end
    local cm = false
    for _, cn in pairs(ci:GetChildren()) do
        if cn:IsA("Tool") then cm = true break end
    end
    if i.t and cm then
        local co = bf()
        if co then
            local cp = co.Position + (co.Parent:FindFirstChild(i.u).Velocity * Vector3.new(i.ab.ac, i.ab.ad, i.ab.ac))
            h.CFrame = CFrame.new(h.CFrame.Position, cp)
            if av(co) then ba() end
        end
    end
end)

local function cx()
    for _, cy in pairs(j) do pcall(function() cy:Disconnect() end) end
    for _, cz in pairs(k) do pcall(function() cz.ah:Remove() cz.ai:Remove() end) end
    pcall(function() bt:Destroy() end)
    i.t, i.w = false, false
end

game:BindToClose(cx)

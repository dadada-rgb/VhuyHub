local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local StarterGui = game:GetService("StarterGui")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local localplayer = Players.LocalPlayer
local Camera = Workspace.CurrentCamera

local ESP_ENABLED = true 
local SHOOT_OFFSET = 2.8 
local OFFSET_TO_PING_MULT = 1 
local UPDATE_INTERVAL = 0.5 
local RANDOM_DELAY = 0.1 

local playerData = {}
local espObjects = {}
local isScriptRunning = false
local espActive = ESP_ENABLED
local lastUpdate = tick()

local function isMurderMystery2()
    return ReplicatedStorage:FindFirstChild("Remotes") 
        and ReplicatedStorage.Remotes:FindFirstChild("Gameplay")
end

local function getMap()
    for _, o in ipairs(Workspace:GetChildren()) do
        if o:FindFirstChild("CoinContainer") and o:FindFirstChild("Spawns") then
            return o
        end
    end
    return nil
end

local function findMurderer()
    if playerData then
        for player, data in pairs(playerData) do
            if data.Role == "Murderer" then
                local plr = Players:FindFirstChild(player)
                if plr and plr.Character then
                    return plr
                end
            end
        end
    end
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr ~= localplayer and plr.Character then
            if plr.Backpack:FindFirstChild("Knife") or (plr.Character and plr.Character:FindFirstChild("Knife")) then
                return plr
            end
        end
    end
    return nil
end

local function findSheriff()
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr.Character and (plr.Backpack:FindFirstChild("Gun") or (plr.Character and plr.Character:FindFirstChild("Gun"))) then
            return plr
        end
    end
    if playerData then
        for player, data in pairs(playerData) do
            if data.Role == "Sheriff" then
                local plr = Players:FindFirstChild(player)
                if plr and plr.Character then
                    return plr
                end
            end
        end
    end
    return nil
end

local function findSheriffThatsNotMe()
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr ~= localplayer and plr.Character and (plr.Backpack:FindFirstChild("Gun") or (plr.Character and plr.Character:FindFirstChild("Gun"))) then
            return plr
        end
    end
    if playerData then
        for player, data in pairs(playerData) do
            if data.Role == "Sheriff" and Players:FindFirstChild(player) ~= localplayer then
                local plr = Players:FindFirstChild(player)
                if plr and plr.Character then
                    return plr
                end
            end
        end
    end
    return nil
end

local function createESP(object, color)
    if not espActive or not object then return end
    pcall(function()
        if espObjects[object] then
            espObjects[object].highlight:Destroy()
            espObjects[object] = nil
        end
        local highlight = Instance.new("Highlight")
        highlight.Parent = object
        highlight.FillColor = color
        highlight.OutlineColor = color
        highlight.FillTransparency = 0.6 
        highlight.OutlineTransparency = 0.2
        highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
        espObjects[object] = { highlight = highlight }
    end)
end

local function clearESP()
    for object, esp in pairs(espObjects) do
        pcall(function()
            esp.highlight:Destroy()
        end)
    end
    espObjects = {}
end

local function reloadPlayerESP()
    if not espActive or tick() - lastUpdate < UPDATE_INTERVAL then return end
    lastUpdate = tick()
    clearESP()
    for _, player in ipairs(Players:GetPlayers()) do
        if player.Character and player ~= localplayer then
            if player == findMurderer() then
                createESP(player.Character, Color3.fromRGB(255, 0, 0))
            elseif player == findSheriff() then
                createESP(player.Character, Color3.fromRGB(0, 153, 255))
            else
                createESP(player.Character, Color3.fromRGB(0, 255, 0))
            end
        end
    end
    task.wait(math.random(0, RANDOM_DELAY)) 
end

local function toggleESP()
    espActive = not espActive
    if espActive then
        reloadPlayerESP()
    else
        clearESP()
    end
end

-- Get Predicted Position for Shooting
local function getPredictedPosition(player, shootOffset)
    local success, result = pcall(function()
        if not player.Character then
            return Vector3.new(0, 0, 0)
        end
        local playerHRP = player.Character:FindFirstChild("UpperTorso")
        local playerHum = player.Character:FindFirstChild("Humanoid")
        if not playerHRP or not playerHum then
            return Vector3.new(0, 0, 0)
        end
        local playerPosition = playerHRP.Position
        local velocity = playerHRP.AssemblyLinearVelocity
        local playerMoveDirection = playerHum.MoveDirection
        local predictedPosition = playerPosition + (velocity * Vector3.new(0, 0.5, 0)) * (shootOffset / 15) + playerMoveDirection * shootOffset
        predictedPosition = predictedPosition * (((localplayer:GetNetworkPing() * 1000) * ((OFFSET_TO_PING_MULT - 1) * 0.01)) + 1)
        return predictedPosition
    end)
    if not success then
        return Vector3.new(0, 0, 0)
    end
    return result
end

-- Shoot Murderer
local lastShot = tick()
local function shootMurderer()
    if tick() - lastShot < 0.5 then return end 
    lastShot = tick()
    if findSheriff() ~= localplayer then
        return
    end
    local murderer = findMurderer() or findSheriffThatsNotMe()
    if not murderer then
        return
    end
    if not localplayer.Character:FindFirstChild("Gun") then
        local hum = localplayer.Character:FindFirstChild("Humanoid")
        if localplayer.Backpack:FindFirstChild("Gun") then
            hum:EquipTool(localplayer.Backpack:FindFirstChild("Gun"))
        else
            return
        end
    end
    local murdererHRP = murderer.Character:FindFirstChild("HumanoidRootPart")
    if not murdererHRP then
        return
    end
    local predictedPosition = getPredictedPosition(murderer, SHOOT_OFFSET)
    if predictedPosition == Vector3.new(0, 0, 0) then return end
    local args = {
        [1] = 1,
        [2] = predictedPosition,
        [3] = "AH2"
    }
    pcall(function()
        localplayer.Character.Gun.KnifeLocal.CreateBeam.RemoteFunction:InvokeServer(unpack(args))
    end)
end

Workspace.ChildAdded:Connect(function(ch)
    if ch == getMap() and espActive then
        task.wait(math.random(1, 2)) 
        reloadPlayerESP()
    end
end)

Workspace.ChildRemoved:Connect(function(ch)
    if ch == getMap() and espActive then
        clearESP()
    end
end)

local function initialize()
    local success, _ = pcall(function()
        localplayer:WaitForChild("PlayerGui", 15)
        ReplicatedStorage:WaitForChild("Remotes", 15):WaitForChild("Gameplay", 15):WaitForChild("PlayerDataChanged", 15)
    end)
    if not success or not isMurderMystery2() then
        return
    end
    isScriptRunning = true
    pcall(function()
        local gameplay = ReplicatedStorage.Remotes.Gameplay.PlayerDataChanged
        gameplay.OnClientEvent:Connect(function(data)
            playerData = data
            if espActive then
                reloadPlayerESP()
            end
        end)
    end)
    if espActive then
        reloadPlayerESP()
        Players.PlayerAdded:Connect(function(player)
            player.CharacterAdded:Connect(function()
                if espActive then
                    reloadPlayerESP()
                end
            end)
        end)
        Players.PlayerRemoving:Connect(function()
            if espActive then
                reloadPlayerESP()
            end
        end)
    end

    UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
        if gameProcessedEvent or not isScriptRunning then return end
        if input.KeyCode == Enum.KeyCode.T then
            toggleESP()
        elseif input.UserInputType == Enum.UserInputType.MouseButton3 then
            shootMurderer()
        end
    end)
end

local e = game:GetService('Players').LocalPlayer
local uis = game:GetService("UserInputService")

local autoFarm = false
local runningFarm = false

local function m()
	if runningFarm then return end
	runningFarm = true

	local k = game:GetService('TweenService')
	local g = game.Players.LocalPlayer
	local r = g.Character or g.CharacterAdded:Wait()
	local A = r:WaitForChild('HumanoidRootPart')
	local a = r:WaitForChild('Humanoid')

	local function j()
		while true do
			for y, E in ipairs(workspace:GetChildren()) do
				if E:GetAttribute('MapID') and E:FindFirstChild('CoinContainer') then
					return E
				end
			end
			task.wait()
		end
	end

	local function c()
		local C = j()
		local D, i = nil, math.huge
		for p, l in ipairs(C.CoinContainer:GetChildren()) do
			local q = l:FindFirstChild('CoinVisual')
			if q and not q:GetAttribute('Collected') then
				local _ = (A.Position - l.Position).Magnitude
				if _ < i then
					D = l
					i = _
				end
			end
		end
		return D
	end

	local function b(B)
		a:ChangeState(11) -- Nháº£y
		local t = (A.Position - B.Position).Magnitude
		local f = k:Create(A, TweenInfo.new(t / 25, Enum.EasingStyle.Linear), {CFrame = B.CFrame})
		f:Play()
		f.Completed:Wait()
	end

	while autoFarm do
		local z = c()
		if z then
			b(z)
			local h = z:FindFirstChild('CoinVisual')
			while h and not h:GetAttribute('Collected') and h.Parent and autoFarm do
				local x = c()
				if x and x ~= z then
					break
				end
				task.wait()
			end
		else
			task.wait(0.1)
		end
	end

	runningFarm = false
end

-- Khi nhÃ¢n váº­t cháº¿t thÃ¬ tá»± cháº¡y láº¡i náº¿u Äang auto
e.CharacterAdded:Connect(function()
	task.wait(1)
	if autoFarm then
		m()
	end
end)

-- PhÃ­m C báº­t/táº¯t
uis.InputBegan:Connect(function(input, gameProcessed)
	if gameProcessed then return end
	if input.KeyCode == Enum.KeyCode.C then
		autoFarm = not autoFarm
		if autoFarm then
			print("AutoFarm ON")
			m()
		else
			print("AutoFarm OFF")
		end
	end
end)

local xy = game:GetService("Players")
local ab = game:GetService("UserInputService")
local pq = Instance.new("ScreenGui")
local rs = Instance.new("Frame")
local tu = Instance.new("UICorner")
local vw = Instance.new("TextButton")
local mn = Instance.new("TextButton")
local kl = Instance.new("UICorner")
local ef = Instance.new("UICorner")
local gh = xy.LocalPlayer

pq.Parent = gh:WaitForChild("PlayerGui")
pq.Name = "zX9qW2"
pq.ResetOnSpawn = false

rs.Parent = pq
rs.Position = UDim2.new(0.161, 0, 0.21, 0)
rs.Size = UDim2.new(0, 166, 0, 98)
rs.BackgroundColor3 = Color3.fromRGB(255, 179, 186)
rs.Active = true
rs.Draggable = true

tu.CornerRadius = UDim.new(0, 8)
tu.Parent = rs

vw.Parent = rs
vw.Name = "jH4mP8"
vw.Position = UDim2.new(0.036, 0, 0.087, 0)
vw.Size = UDim2.new(0, 150, 0, 40)
vw.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
vw.Text = "AutoFarm(Vhuy)"
vw.Font = Enum.Font.SourceSansBold
vw.TextColor3 = Color3.fromRGB(0, 0, 0)
vw.TextSize = 14

kl.CornerRadius = UDim.new(0, 8)
kl.Parent = vw

mn.Parent = rs
mn.Name = "tR7nY5"
mn.Position = UDim2.new(0.036, 0, 0.523, 0)
mn.Size = UDim2.new(0, 150, 0, 40)
mn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
mn.Text = "Shoot(Vhuy)"
mn.Font = Enum.Font.SourceSansBold
mn.TextColor3 = Color3.fromRGB(0, 0, 0)
mn.TextSize = 14

ef.CornerRadius = UDim.new(0, 8)
ef.Parent = mn

vw.MouseButton1Click:Connect(function()
    autoFarm = not autoFarm
    if autoFarm then
        print("AutoFarm ON")
        m()
    else
        print("AutoFarm OFF")
    end
end)

mn.MouseButton1Click:Connect(function()
    shootMurderer()
end)

pcall(initialize)

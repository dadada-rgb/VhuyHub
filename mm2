-- Services
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local localplayer = Players.LocalPlayer
local Camera = Workspace.CurrentCamera

-- Configuration
local ESP_ENABLED = false
local SHOOT_OFFSET = 2.8
local OFFSET_TO_PING_MULT = 1
local UPDATE_INTERVAL = 0.5
local RANDOM_DELAY = 0.1
local MAX_COIN_DISTANCE = 100
local MAX_GUN_DISTANCE = 500
local ANTI_CHEAT_DELAY = 0.05

-- Variables
local playerData = {}
local espObjects = {}
local isScriptRunning = false
local espActive = ESP_ENABLED
local lastUpdate = tick()
local autoFarm = false
local lastShot = tick()

-- Game checks
local function isMurderMystery2()
    return ReplicatedStorage:FindFirstChild("Remotes") 
        and ReplicatedStorage.Remotes:FindFirstChild("Gameplay")
end

local function getMap()
    for _, o in ipairs(Workspace:GetChildren()) do
        if o:GetAttribute("MapID") and o:FindFirstChild("CoinContainer") and o:FindFirstChild("Spawns") then
            return o
        end
    end
    return nil
end

-- Role detection
local function findMurderer()
    if playerData then
        for player, data in pairs(playerData) do
            if data.Role == "Murderer" then
                local plr = Players:FindFirstChild(player)
                if plr and plr.Character then
                    return plr
                end
            end
        end
    end
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr ~= localplayer and plr.Character then
            if plr.Backpack:FindFirstChild("Knife") or (plr.Character and plr.Character:FindFirstChild("Knife")) then
                return plr
            end
        end
    end
    return nil
end

local function findSheriff()
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr.Character and (plr.Backpack:FindFirstChild("Gun") or (plr.Character and plr.Character:FindFirstChild("Gun"))) then
            return plr
        end
    end
    if playerData then
        for player, data in pairs(playerData) do
            if data.Role == "Sheriff" then
                local plr = Players:FindFirstChild(player)
                if plr and plr.Character then
                    return plr
                end
            end
        end
    end
    return nil
end

local function findSheriffThatsNotMe()
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr ~= localplayer and plr.Character and (plr.Backpack:FindFirstChild("Gun") or (plr.Character and plr.Character:FindFirstChild("Gun"))) then
            return plr
        end
    end
    if playerData then
        for player, data in pairs(playerData) do
            if data.Role == "Sheriff" and Players:FindFirstChild(player) ~= localplayer then
                local plr = Players:FindFirstChild(player)
                if plr and plr.Character then
                    return plr
                end
            end
        end
    end
    return nil
end

-- ESP functions
local function createESP(object, color)
    if not espActive or not object then return end
    pcall(function()
        if espObjects[object] then
            espObjects[object].highlight:Destroy()
            espObjects[object] = nil
        end
        local highlight = Instance.new("Highlight")
        highlight.Parent = object
        highlight.FillColor = color
        highlight.OutlineColor = color
        highlight.FillTransparency = 0.6
        highlight.OutlineTransparency = 0.2
        highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
        espObjects[object] = { highlight = highlight }
    end)
end

local function clearESP()
    for object, esp in pairs(espObjects) do
        pcall(function()
            esp.highlight:Destroy()
        end)
    end
    espObjects = {}
end

local function reloadPlayerESP()
    if not espActive or tick() - lastUpdate < UPDATE_INTERVAL then return end
    lastUpdate = tick()
    clearESP()
    for _, player in ipairs(Players:GetPlayers()) do
        if player.Character and player ~= localplayer then
            if player == findMurderer() then
                createESP(player.Character, Color3.fromRGB(255, 0, 0))
            elseif player == findSheriff() then
                createESP(player.Character, Color3.fromRGB(0, 153, 255))
            else
                createESP(player.Character, Color3.fromRGB(0, 255, 0))
            end
        end
    end
    task.wait(math.random(0, RANDOM_DELAY))
end

-- Predicted position
local function getPredictedPosition(player, shootOffset)
    local success, result = pcall(function()
        if not player.Character then
            return Vector3.new(0, 0, 0)
        end
        local playerHRP = player.Character:FindFirstChild("UpperTorso")
        local playerHum = player.Character:FindFirstChild("Humanoid")
        if not playerHRP or not playerHum then
            return Vector3.new(0, 0, 0)
        end
        local playerPosition = playerHRP.Position
        local velocity = playerHRP.AssemblyLinearVelocity
        local playerMoveDirection = playerHum.MoveDirection
        local predictedPosition = playerPosition + (velocity * Vector3.new(0, 0.5, 0)) * (shootOffset / 15) + playerMoveDirection * shootOffset
        predictedPosition = predictedPosition * (((localplayer:GetNetworkPing() * 1000) * ((OFFSET_TO_PING_MULT - 1) * 0.01)) + 1)
        return predictedPosition
    end)
    if not success then
        return Vector3.new(0, 0, 0)
    end
    return result
end

-- Shoot Murderer
local function shootMurderer()
    if tick() - lastShot < 0.5 then return end 
    lastShot = tick()
    if findSheriff() ~= localplayer then
        return
    end
    local murderer = findMurderer() or findSheriffThatsNotMe()
    if not murderer then
        return
    end
    if not localplayer.Character:FindFirstChild("Gun") then
        local hum = localplayer.Character:FindFirstChild("Humanoid")
        if localplayer.Backpack:FindFirstChild("Gun") then
            hum:EquipTool(localplayer.Backpack:FindFirstChild("Gun"))
            task.wait(math.random(0.05, 0.1) + ANTI_CHEAT_DELAY)
        else
            return
        end
    end
    local murdererHRP = murderer.Character:FindFirstChild("HumanoidRootPart")
    if not murdererHRP then
        return
    end
    local predictedPosition = getPredictedPosition(murderer, SHOOT_OFFSET)
    if predictedPosition == Vector3.new(0, 0, 0) then return end
    local args = {
        [1] = 1,
        [2] = predictedPosition,
        [3] = "AH2"
    }
    pcall(function()
        localplayer.Character.Gun.KnifeLocal.CreateBeam.RemoteFunction:InvokeServer(unpack(args))
    end)
    task.wait(math.random(0, ANTI_CHEAT_DELAY))
end

-- AutoFarm Coins
local function autoFarmCoins()
    local k = TweenService
    local g = Players.LocalPlayer
    local r = g.Character or g.CharacterAdded:Wait()
    local A = r:WaitForChild("HumanoidRootPart", 5)
    local a = r:WaitForChild("Humanoid", 5)
    if not A or not a then
        return
    end
    local function findMap()
        for _, E in ipairs(Workspace:GetChildren()) do
            if E:GetAttribute("MapID") and E:FindFirstChild("CoinContainer") then
                return E
            end
        end
        task.wait(0.5)
        return nil
    end
    local function findCoin()
        local C = findMap()
        if not C or not C:FindFirstChild("CoinContainer") then return nil end
        local D, i = nil, math.huge
        for _, l in ipairs(C.CoinContainer:GetChildren()) do
            local q = l:FindFirstChild("CoinVisual")
            if q and not q:GetAttribute("Collected") and l.Parent then
                local dist = (A.Position - l.Position).Magnitude
                if dist < i and dist < MAX_COIN_DISTANCE then
                    D = l
                    i = dist
                end
            end
        end
        return D
    end
    local function moveToCoin(B)
        if not B or not B.Parent then return end
        a:ChangeState(11)
        local t = (A.Position - B.Position).Magnitude
        if t > MAX_COIN_DISTANCE then return end
        local offset = Vector3.new(math.random(-5, 5)/10, 0, math.random(-5, 5)/10)
        local f = k:Create(A, TweenInfo.new(t / 25, Enum.EasingStyle.Linear), {CFrame = B.CFrame * CFrame.Angles(0, math.rad(math.random(-10, 10)), 0) + offset})
        f:Play()
        f.Completed:Wait()
    end
    while autoFarm do
        local z = findCoin()
        if z then
            moveToCoin(z)
            local h = z:FindFirstChild("CoinVisual")
            while h and not h:GetAttribute("Collected") and h.Parent and autoFarm do
                local x = findCoin()
                if x and x ~= z then
                    break
                end
                task.wait(0.1 + math.random(0, ANTI_CHEAT_DELAY))
            end
        end
        task.wait(math.random(0.1, 0.3))
    end
end

-- Auto-Shoot when Sheriff and Autofarm is Active
local function checkLineOfSight(startPos, endPos)
    local raycastParams = RaycastParams.new()
    raycastParams.FilterDescendantsInstances = {localplayer.Character, Workspace:FindFirstChild("CoinContainer")}
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
    raycastParams.IgnoreWater = true
    local raycastResult = Workspace:Raycast(startPos, (endPos - startPos).Unit * (endPos - startPos).Magnitude, raycastParams)
    return not raycastResult or raycastResult.Instance:IsDescendantOf(findMurderer().Character)
end

RunService.Heartbeat:Connect(function()
    if not autoFarm or not isScriptRunning then return end
    if findSheriff() == localplayer then
        local murderer = findMurderer()
        if murderer and murderer.Character and murderer.Character:FindFirstChild("HumanoidRootPart") and localplayer.Character and localplayer.Character:FindFirstChild("HumanoidRootPart") then
            local startPos = localplayer.Character.HumanoidRootPart.Position
            local endPos = murderer.Character.HumanoidRootPart.Position
            if checkLineOfSight(startPos, endPos) then
                task.spawn(shootMurderer)
            end
        end
    end
end)

-- Event connections
Workspace.ChildAdded:Connect(function(ch)
    if ch == getMap() and espActive then
        task.wait(math.random(1, 2))
        reloadPlayerESP()
    end
end)

Workspace.ChildRemoved:Connect(function(ch)
    if ch == getMap() and espActive then
        clearESP()
    end
end)

localplayer.CharacterAdded:Connect(function()
    task.wait(math.random(0.5, 1.5))
    if autoFarm then
        task.spawn(autoFarmCoins)
    end
    if espActive then
        reloadPlayerESP()
    end
end)

Players.PlayerAdded:Connect(function(player)
    if player ~= localplayer then
        player.CharacterAdded:Connect(function()
            if espActive then
                task.wait(math.random(0.5, 1.5))
                reloadPlayerESP()
            end
        end)
    end
end)

Players.PlayerRemoving:Connect(function()
    if espActive then
        task.wait(math.random(0.5, 1.5))
        reloadPlayerESP()
    end
end)

-- GUI setup
local pq = Instance.new("ScreenGui")
local rs = Instance.new("Frame")
local tu = Instance.new("UICorner")
local vw = Instance.new("TextButton") -- AutoFarm
local mn = Instance.new("TextButton") -- Shoot
local xy = Instance.new("TextButton") -- ESP
local ag = Instance.new("TextButton") -- AutoGun (Not Working)
local kl = Instance.new("UICorner")
local ef = Instance.new("UICorner")
local zq = Instance.new("UICorner")
local wg = Instance.new("UICorner")

pq.Parent = localplayer:WaitForChild("PlayerGui", 5)
pq.Name = "zX9qW2"
pq.ResetOnSpawn = false

rs.Parent = pq
rs.Position = UDim2.new(0.161, 0, 0.21, 0)
rs.Size = UDim2.new(0, 120, 0, 120)
rs.BackgroundColor3 = Color3.fromRGB(255, 179, 186)
rs.Active = true
rs.Draggable = true

tu.CornerRadius = UDim.new(0, 8)
tu.Parent = rs

vw.Parent = rs
vw.Name = "jH4mP8"
vw.Position = UDim2.new(0.083, 0, 0.05, 0)
vw.Size = UDim2.new(0, 100, 0, 25)
vw.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
vw.Text = "AutoFarm (Off)"
vw.Font = Enum.Font.SourceSansBold
vw.TextColor3 = Color3.fromRGB(0, 0, 0)
vw.TextSize = 12
vw.Active = true
vw.Selectable = true

kl.CornerRadius = UDim.new(0, 8)
kl.Parent = vw

mn.Parent = rs
mn.Name = "tR7nY5"
mn.Position = UDim2.new(0.083, 0, 0.283, 0)
mn.Size = UDim2.new(0, 100, 0, 25)
mn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
mn.Text = "Shoot"
mn.Font = Enum.Font.SourceSansBold
mn.TextColor3 = Color3.fromRGB(0, 0, 0)
mn.TextSize = 12
mn.Active = true
mn.Selectable = true

ef.CornerRadius = UDim.new(0, 8)
ef.Parent = mn

xy.Parent = rs
xy.Name = "uP5kQ3"
xy.Position = UDim2.new(0.083, 0, 0.517, 0)
xy.Size = UDim2.new(0, 100, 0, 25)
xy.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
xy.Text = "ESP (Off)"
xy.Font = Enum.Font.SourceSansBold
xy.TextColor3 = Color3.fromRGB(0, 0, 0)
xy.TextSize = 12
xy.Active = true
xy.Selectable = true

zq.CornerRadius = UDim.new(0, 8)
zq.Parent = xy

ag.Parent = rs
ag.Name = "vQ2zW9"
ag.Position = UDim2.new(0.083, 0, 0.75, 0)
ag.Size = UDim2.new(0, 100, 0, 25)
ag.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ag.Text = "AutoGun (Not Working)"
ag.Font = Enum.Font.SourceSansBold
ag.TextColor3 = Color3.fromRGB(0, 0, 0)
ag.TextSize = 12
ag.Active = false
ag.Selectable = false

wg.CornerRadius = UDim.new(0, 8)
wg.Parent = ag

-- Button functionality
vw.MouseButton1Click:Connect(function()
    autoFarm = not autoFarm
    vw.Text = "AutoFarm (" .. (autoFarm and "On" or "Off") .. ")"
    if autoFarm then
        task.spawn(autoFarmCoins)
    end
end)

mn.MouseButton1Click:Connect(function()
    task.spawn(shootMurderer)
end)

xy.MouseButton1Click:Connect(function()
    espActive = not espActive
    xy.Text = "ESP (" .. (espActive and "On" or "Off") .. ")"
    if espActive then
        reloadPlayerESP()
    else
        clearESP()
    end
end)

-- Input bindings
UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
    if gameProcessedEvent or not isScriptRunning then return end
    if input.KeyCode == Enum.KeyCode.T then
        espActive = not espActive
        xy.Text = "ESP (" .. (espActive and "On" or "Off") .. ")"
        if espActive then
            reloadPlayerESP()
        else
            clearESP()
        end
    elseif input.UserInputType == Enum.UserInputType.MouseButton3 then
        task.spawn(shootMurderer)
    elseif input.KeyCode == Enum.KeyCode.C then
        autoFarm = not autoFarm
        vw.Text = "AutoFarm (" .. (autoFarm and "On" or "Off") .. ")"
        if autoFarm then
            task.spawn(autoFarmCoins)
        end
    end
end)

-- Initialize
local function initialize()
    local success = pcall(function()
        localplayer:WaitForChild("PlayerGui", 10)
        ReplicatedStorage:WaitForChild("Remotes", 10):WaitForChild("Gameplay", 10):WaitForChild("PlayerDataChanged", 10)
    end)
    if not success or not isMurderMystery2() then
        return
    end
    isScriptRunning = true
    pcall(function()
        local gameplay = ReplicatedStorage.Remotes.Gameplay.PlayerDataChanged
        gameplay.OnClientEvent:Connect(function(data)
            playerData = data
            if espActive then
                reloadPlayerESP()
            end
        end)
    end)
    if espActive then
        reloadPlayerESP()
    end
end

local function cleanup()
    clearESP()
    autoFarm = false
    espActive = false
    isScriptRunning = false
    pq:Destroy()
end

game:BindToClose(cleanup)
pcall(initialize)

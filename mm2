local a = game:GetService("Players")
local b = game:GetService("Workspace")
local c = game:GetService("ReplicatedStorage")
local d = game:GetService("RunService")
local e = game:GetService("TweenService")
local f = game:GetService("UserInputService")
local g = a.LocalPlayer
local h = b.CurrentCamera
local i = { j = false, k = 2.8, l = 1, m = 0.5, n = 0.1, o = 100, p = 500, q = 0.05 }
local r = {}
local s = {}
local t = false
local u = tick()
local v = false
local w = tick()

local function x()
    return c:FindFirstChild("Remotes") and c.Remotes:FindFirstChild("Gameplay")
end

local function y()
    for _, z in ipairs(b:GetChildren()) do
        if z:GetAttribute("MapID") and z:FindFirstChild("CoinContainer") and z:FindFirstChild("Spawns") then return z end
    end
    return nil
end

local function aa()
    if r then
        for ab, ac in pairs(r) do
            if ac.Role == "Murderer" then
                local ad = a:FindFirstChild(ab)
                if ad and ad.Character then return ad end
            end
        end
    end
    for _, ad in ipairs(a:GetPlayers()) do
        if ad ~= g and ad.Character and (ad.Backpack:FindFirstChild("Knife") or (ad.Character and ad.Character:FindFirstChild("Knife"))) then return ad end
    end
    return nil
end

local function ab()
    for _, ad in ipairs(a:GetPlayers()) do
        if ad.Character and (ad.Backpack:FindFirstChild("Gun") or (ad.Character and ad.Character:FindFirstChild("Gun"))) then return ad end
    end
    if r then
        for ac, ad in pairs(r) do
            if ad.Role == "Sheriff" then
                local ae = a:FindFirstChild(ac)
                if ae and ae.Character then return ae end
            end
        end
    end
    return nil
end

local function ac()
    for _, ad in ipairs(a:GetPlayers()) do
        if ad ~= g and ad.Character and (ad.Backpack:FindFirstChild("Gun") or (ad.Character and ad.Character:FindFirstChild("Gun"))) then return ad end
    end
    if r then
        for ac, ad in pairs(r) do
            if ad.Role == "Sheriff" and a:FindFirstChild(ac) ~= g then
                local ae = a:FindFirstChild(ac)
                if ae and ae.Character then return ae end
            end
        end
    end
    return nil
end

local function ad(ae, af)
    if not i.j or not ae then return end
    pcall(function()
        if s[ae] then s[ae].ag:Destroy() s[ae] = nil end
        local ag = Instance.new("Highlight")
        ag.Parent = ae
        ag.FillColor = af
        ag.OutlineColor = af
        ag.FillTransparency = 0.6
        ag.OutlineTransparency = 0.2
        ag.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
        s[ae] = { ag = ag }
    end)
end

local function ah()
    for ai, aj in pairs(s) do pcall(function() aj.ag:Destroy() end) end
    s = {}
end

local function ak()
    if not i.j or tick() - u < i.m then return end
    u = tick()
    ah()
    for _, al in ipairs(a:GetPlayers()) do
        if al.Character and al ~= g then
            if al == aa() then
                ad(al.Character, Color3.fromRGB(255, 0, 0))
            elseif al == ab() then
                ad(al.Character, Color3.fromRGB(0, 153, 255))
            else
                ad(al.Character, Color3.fromRGB(0, 255, 0))
            end
        end
    end
    task.wait(math.random(0, i.n))
end

local function al(am, an)
    local ao, ap = pcall(function()
        if not am.Character then return Vector3.new(0, 0, 0) end
        local aq = am.Character:FindFirstChild("UpperTorso")
        local ar = am.Character:FindFirstChild("Humanoid")
        if not aq or not ar then return Vector3.new(0, 0, 0) end
        local as = aq.Position
        local at = aq.AssemblyLinearVelocity
        local au = ar.MoveDirection
        local av = as + (at * Vector3.new(0, 0.5, 0)) * (an / 15) + au * an
        av = av * (((g:GetNetworkPing() * 1000) * ((i.l - 1) * 0.01)) + 1)
        return av
    end)
    if not ao then return Vector3.new(0, 0, 0) end
    return ap
end

local function aw()
    if tick() - w < 0.5 then return end
    w = tick()
    if ab() ~= g then return end
    local ax = aa() or ac()
    if not ax or not ax.Character or not ax.Character:FindFirstChild("HumanoidRootPart") then return end
    if not g.Character:FindFirstChild("Gun") then
        local ay = g.Character:FindFirstChild("Humanoid")
        if g.Backpack:FindFirstChild("Gun") then
            ay:EquipTool(g.Backpack:FindFirstChild("Gun"))
            task.wait(math.random(50, 100) / 1000 + i.q)
        else
            return
        end
    end
    local az = al(ax, i.k)
    if az == Vector3.new(0, 0, 0) then return end
    pcall(function()
        g.Character.Gun.KnifeLocal.CreateBeam.RemoteFunction:InvokeServer(1, az, "AH2")
    end)
    task.wait(math.random(0, i.q))
end

local function ba()
    local bb = e
    local bc = g
    local bd = bc.Character or bc.CharacterAdded:Wait()
    local be = bd:WaitForChild("HumanoidRootPart", 5)
    local bf = bd:WaitForChild("Humanoid", 5)
    if not be or not bf then return end
    local function bg()
        for _, bh in ipairs(b:GetChildren()) do
            if bh:GetAttribute("MapID") and bh:FindFirstChild("CoinContainer") then return bh end
        end
        task.wait(0.5)
        return nil
    end
    local function bi()
        local bj = bg()
        if not bj or not bj:FindFirstChild("CoinContainer") then return nil end
        local bk, bl = nil, math.huge
        for _, bm in ipairs(bj.CoinContainer:GetChildren()) do
            local bn = bm:FindFirstChild("CoinVisual")
            if bn and not bn:GetAttribute("Collected") and bm.Parent then
                local bo = (be.Position - bm.Position).Magnitude
                if bo < bl and bo < i.o then
                    bk = bm
                    bl = bo
                end
            end
        end
        return bk
    end
    local function bp(bq)
        if not bq or not bq.Parent then return end
        bf:ChangeState(11)
        local br = (be.Position - bq.Position).Magnitude
        if br > i.o then return end
        local bs = Vector3.new(math.random(-5, 5)/10, 0, math.random(-5, 5)/10)
        local bt = bb:Create(be, TweenInfo.new(br / 25, Enum.EasingStyle.Sine), {CFrame = bq.CFrame * CFrame.Angles(0, math.rad(math.random(-10, 10)), 0) + bs})
        bt:Play()
        bt.Completed:Wait()
    end
    while v do
        local bu = bi()
        if bu then
            bp(bu)
            local bv = bu:FindFirstChild("CoinVisual")
            while bv and not bv:GetAttribute("Collected") and bv.Parent and v do
                local bw = bi()
                if bw and bw ~= bu then break end
                task.wait(0.1 + math.random(0, i.q))
            end
        end
        task.wait(math.random(100, 300) / 1000)
    end
end

local function bx(by, bz)
    local ca = RaycastParams.new()
    ca.FilterDescendantsInstances = {g.Character, b:FindFirstChild("CoinContainer")}
    ca.FilterType = Enum.RaycastFilterType.Blacklist
    ca.IgnoreWater = true
    local cb = b:Raycast(by, (bz - by).Unit * (bz - by).Magnitude, ca)
    return not cb or cb.Instance:IsDescendantOf(aa().Character)
end

d.Heartbeat:Connect(function()
    if not v or not t then return end
    if ab() == g then
        local cc = aa()
        if cc and cc.Character and cc.Character:FindFirstChild("HumanoidRootPart") and g.Character and g.Character:FindFirstChild("HumanoidRootPart") then
            local by = g.Character.HumanoidRootPart.Position
            local bz = cc.Character.HumanoidRootPart.Position
            if bx(by, bz) then task.spawn(aw) end
        end
    end
end)

b.ChildAdded:Connect(function(cd)
    if cd == y() and i.j then
        task.wait(math.random(800, 1200) / 1000)
        ak()
    end
end)

b.ChildRemoved:Connect(function(cd)
    if cd == y() and i.j then ah() end
end)

g.CharacterAdded:Connect(function()
    task.wait(math.random(600, 1600) / 1000)
    if v then task.spawn(ba) end
    if i.j then ak() end
end)

a.PlayerAdded:Connect(function(ce)
    if ce ~= g then
        ce.CharacterAdded:Connect(function()
            if i.j then task.wait(math.random(600, 1600) / 1000) ak() end
        end)
    end
end)

a.PlayerRemoving:Connect(function()
    if i.j then task.wait(math.random(600, 1600) / 1000) ak() end
end)

local cf = Instance.new("ScreenGui")
local cg = Instance.new("Frame")
local ch = Instance.new("UICorner")
local ci = Instance.new("TextButton")
local cj = Instance.new("TextButton")
local ck = Instance.new("TextButton")
local cl = Instance.new("TextButton")
local cm = Instance.new("UICorner")
local cn = Instance.new("UICorner")
local co = Instance.new("UICorner")
local cp = Instance.new("UICorner")

cf.Parent = g:WaitForChild("PlayerGui", 5)
cf.Name = tostring(math.random(1e6, 1e7))
cf.ResetOnSpawn = false
cf.Enabled = false

cg.Size = UDim2.new(0, 100, 0, 120)
cg.Position = UDim2.new(0.15, 0, 0.25, 0)
cg.BackgroundColor3 = Color3.fromRGB(255, 179, 186)
cg.BackgroundTransparency = 0.3
cg.Active = true
cg.Draggable = true
cg.Parent = cf

ch.CornerRadius = UDim.new(0, 8)
ch.Parent = cg

ci.Size = UDim2.new(0, 80, 0, 20)
ci.Position = UDim2.new(0.1, 0, 0.06, 0)
ci.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ci.Text = "Farm (" .. (v and "On" or "Off") .. ")"
ci.TextColor3 = Color3.fromRGB(255, 255, 255)
ci.TextSize = 12
ci.Font = Enum.Font.SourceSans
ci.Parent = cg

cm.CornerRadius = UDim.new(0, 8)
cm.Parent = ci

cj.Size = UDim2.new(0, 80, 0, 20)
cj.Position = UDim2.new(0.1, 0, 0.28, 0)
cj.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
cj.Text = "Shoot"
cj.TextColor3 = Color3.fromRGB(255, 255, 255)
cj.TextSize = 12
cj.Font = Enum.Font.SourceSans
cj.Parent = cg

cn.CornerRadius = UDim.new(0, 8)
cn.Parent = cj

ck.Size = UDim2.new(0, 80, 0, 20)
ck.Position = UDim2.new(0.1, 0, 0.5, 0)
ck.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ck.Text = "ESP (" .. (i.j and "On" or "Off") .. ")"
ck.TextColor3 = Color3.fromRGB(255, 255, 255)
ck.TextSize = 12
ck.Font = Enum.Font.SourceSans
ck.Parent = cg

co.CornerRadius = UDim.new(0, 8)
co.Parent = ck

cl.Size = UDim2.new(0, 80, 0, 20)
cl.Position = UDim2.new(0.1, 0, 0.72, 0)
cl.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
cl.Text = "Disabled"
cl.TextColor3 = Color3.fromRGB(255, 255, 255)
cl.TextSize = 12
cl.Font = Enum.Font.SourceSans
cl.Active = false
cl.Parent = cg

cp.CornerRadius = UDim.new(0, 8)
cp.Parent = cl

ci.MouseButton1Click:Connect(function()
    v = not v
    ci.Text = "Farm (" .. (v and "On" or "Off") .. ")"
    if v then task.spawn(ba) end
end)

cj.MouseButton1Click:Connect(function()
    task.spawn(aw)
end)

ck.MouseButton1Click:Connect(function()
    i.j = not i.j
    ck.Text = "ESP (" .. (i.j and "On" or "Off") .. ")"
    if i.j then ak() else ah() end
end)

f.InputBegan:Connect(function(cq, cr)
    if cr or not t then return end
    if cq.KeyCode == Enum.KeyCode.RightShift then
        cf.Enabled = not cf.Enabled
    elseif cq.KeyCode == Enum.KeyCode.T then
        i.j = not i.j
        ck.Text = "ESP (" .. (i.j and "On" or "Off") .. ")"
        if i.j then ak() else ah() end
    elseif cq.UserInputType == Enum.UserInputType.MouseButton3 then
        task.spawn(aw)
    elseif cq.KeyCode == Enum.KeyCode.C then
        v = not v
        ci.Text = "Farm (" .. (v and "On" or "Off") .. ")"
        if v then task.spawn(ba) end
    end
end)

local function cs()
    local ct = pcall(function()
        g:WaitForChild("PlayerGui", 10)
        c:WaitForChild("Remotes", 10):WaitForChild("Gameplay", 10):WaitForChild("PlayerDataChanged", 10)
    end)
    if not ct or not x() then return end
    t = true
    pcall(function()
        c.Remotes.Gameplay.PlayerDataChanged.OnClientEvent:Connect(function(cu)
            r = cu
            if i.j then ak() end
        end)
    end)
    if i.j then ak() end
end

local function cv()
    ah()
    v = false
    i.j = false
    t = false
    pcall(function() cf:Destroy() end)
end

game:BindToClose(cv)
pcall(cs)

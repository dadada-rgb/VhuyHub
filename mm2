-- Services
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local localplayer = Players.LocalPlayer
local Camera = Workspace.CurrentCamera

-- Configuration
local ESP_ENABLED = false
local SHOOT_OFFSET = 2.8
local OFFSET_TO_PING_MULT = 1
local UPDATE_INTERVAL = 0.5
local RANDOM_DELAY = 0.1
local MAX_COIN_DISTANCE = 100
local MAX_GUN_DISTANCE = 500
local ANTI_CHEAT_DELAY = 0.05

-- Variables
local playerData = {}
local espObjects = {}
local isScriptRunning = false
local espActive = ESP_ENABLED
local lastUpdate = tick()
local autoFarm = false
local lastShot = tick()

-- Game checks
local function isMurderMystery2()
    return ReplicatedStorage:FindFirstChild("Remotes") 
        and ReplicatedStorage.Remotes:FindFirstChild("Gameplay")
end

local function getMap()
    for _, o in ipairs(Workspace:GetChildren()) do
        if o:GetAttribute("MapID") and o:FindFirstChild("CoinContainer") and o:FindFirstChild("Spawns") then
            return o
        end
    end
    return nil
end

-- Role detection
local function findMurderer()
    if playerData then
        for player, data in pairs(playerData) do
            if data.Role == "Murderer" then
                local plr = Players:FindFirstChild(player)
                if plr and plr.Character then
                    return plr
                end
            end
        end
    end
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr ~= localplayer and plr.Character then
            if plr.Backpack:FindFirstChild("Knife") or (plr.Character and plr.Character:FindFirstChild("Knife")) then
                return plr
            end
        end
    end
    return nil
end

local function findSheriff()
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr.Character and (plr.Backpack:FindFirstChild("Gun") or (plr.Character and plr.Character:FindFirstChild("Gun"))) then
            return plr
        end
    end
    if playerData then
        for player, data in pairs(playerData) do
            if data.Role == "Sheriff" then
                local plr = Players:FindFirstChild(player)
                if plr and plr.Character then
                    return plr
                end
            end
        end
    end
    return nil
end

local function findSheriffThatsNotMe()
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr ~= localplayer and plr.Character and (plr.Backpack:FindFirstChild("Gun") or (plr.Character and plr.Character:FindFirstChild("Gun"))) then
            return plr
        end
    end
    if playerData then
        for player, data in pairs(playerData) do
            if data.Role == "Sheriff" and Players:FindFirstChild(player) ~= localplayer then
                local plr = Players:FindFirstChild(player)
                if plr and plr.Character then
                    return plr
                end
            end
        end
    end
    return nil
end

local espcontainer = {
    objects = {},
    Add = function(self, object, config)
        if not espActive then return end
        pcall(function()
            if self.objects[object] then
                self.objects[object].highlight:Destroy()
                self.objects[object] = nil
            end
            local highlight = Instance.new("Highlight")
            highlight.Parent = object
            highlight.FillColor = config.AccentColor
            highlight.OutlineColor = config.AccentColor
            highlight.FillTransparency = 0.5
            highlight.OutlineTransparency = 0
            highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
            self.objects[object] = { highlight = highlight }
            if config.ShowLabel then
                local billboard = Instance.new("BillboardGui")
                billboard.Parent = object
                billboard.Size = UDim2.new(0, 100, 0, 30)
                billboard.StudsOffset = Vector3.new(0, 3, 0)
                billboard.AlwaysOnTop = true
                local textLabel = Instance.new("TextLabel")
                textLabel.Parent = billboard
                textLabel.Size = UDim2.new(1, 0, 1, 0)
                textLabel.BackgroundTransparency = 1
                textLabel.Text = config.LabelText
                textLabel.TextColor3 = config.AccentColor
                textLabel.TextScaled = true
            end
        end)
    end,
    RemoveGroup = function(self, groupName)
        for object, data in pairs(self.objects) do
            if data.group == groupName then
                pcall(function()
                    data.highlight:Destroy()
                    if data.billboard then data.billboard:Destroy() end
                end)
                self.objects[object] = nil
            end
        end
    end,
    ClearAllGroups = function(self)
        for object, data in pairs(self.objects) do
            pcall(function()
                data.highlight:Destroy()
                if data.billboard then data.billboard:Destroy() end
            end)
        end
        self.objects = {}
    end
}

-- Predicted position
local function getPredictedPosition(player, shootOffset)
    local success, result = pcall(function()
        if not player.Character then
            return Vector3.new(0, 0, 0)
        end
        local playerHRP = player.Character:FindFirstChild("UpperTorso")
        local playerHum = player.Character:FindFirstChild("Humanoid")
        if not playerHRP or not playerHum then
            return Vector3.new(0, 0, 0)
        end
        local playerPosition = playerHRP.Position
        local velocity = playerHRP.AssemblyLinearVelocity
        local playerMoveDirection = playerHum.MoveDirection
        local predictedPosition = playerPosition + (velocity * Vector3.new(0, 0.5, 0)) * (shootOffset / 15) + playerMoveDirection * shootOffset
        predictedPosition = predictedPosition * (((localplayer:GetNetworkPing() * 1000) * ((OFFSET_TO_PING_MULT - 1) * 0.01)) + 1)
        return predictedPosition
    end)
    if not success then
        return Vector3.new(0, 0, 0)
    end
    return result
end

-- Shoot Murderer
local function shootMurderer()
    if tick() - lastShot < 0.5 then return end 
    lastShot = tick()
    if findSheriff() ~= localplayer then
        return
    end
    local murderer = findMurderer() or findSheriffThatsNotMe()
    if not murderer then
        return
    end
    if not localplayer.Character:FindFirstChild("Gun") then
        local hum = localplayer.Character:FindFirstChild("Humanoid")
        if localplayer.Backpack:FindFirstChild("Gun") then
            hum:EquipTool(localplayer.Backpack:FindFirstChild("Gun"))
            task.wait(math.random(0.05, 0.1) + ANTI_CHEAT_DELAY)
        else
            return
        end
    end
    local murdererHRP = murderer.Character:FindFirstChild("HumanoidRootPart")
    if not murdererHRP then
        return
    end
    local predictedPosition = getPredictedPosition(murderer, SHOOT_OFFSET)
    if predictedPosition == Vector3.new(0, 0, 0) then return end
    local args = {
        [1] = 1,
        [2] = predictedPosition,
        [3] = "AH2"
    }
    pcall(function()
        localplayer.Character.Gun.KnifeLocal.CreateBeam.RemoteFunction:InvokeServer(unpack(args))
    end)
    task.wait(math.random(0, ANTI_CHEAT_DELAY))
end

-- AutoFarm Coins
local function autoFarmCoins()
    local k = TweenService
    local g = Players.LocalPlayer
    local r = g.Character or g.CharacterAdded:Wait()
    local A = r:WaitForChild("HumanoidRootPart", 5)
    local a = r:WaitForChild("Humanoid", 5)
    if not A or not a then
        return
    end
    local function findMap()
        for _, E in ipairs(Workspace:GetChildren()) do
            if E:GetAttribute("MapID") and E:FindFirstChild("CoinContainer") then
                return E
            end
        end
        task.wait(0.5)
        return nil
    end
    local function findCoin()
        local C = findMap()
        if not C or not C:FindFirstChild("CoinContainer") then return nil end
        local D, i = nil, math.huge
        for _, l in ipairs(C.CoinContainer:GetChildren()) do
            local q = l:FindFirstChild("CoinVisual")
            if q and not q:GetAttribute("Collected") and l.Parent then
                local dist = (A.Position - l.Position).Magnitude
                if dist < i and dist < MAX_COIN_DISTANCE then
                    D = l
                    i = dist
                end
            end
        end
        return D
    end
    local function moveToCoin(B)
        if not B or not B.Parent then return end
        a:ChangeState(11)
        local t = (A.Position - B.Position).Magnitude
        if t > MAX_COIN_DISTANCE then return end
        local offset = Vector3.new(math.random(-5, 5)/10, 0, math.random(-5, 5)/10)
        local f = k:Create(A, TweenInfo.new(t / 25, Enum.EasingStyle.Linear), {CFrame = B.CFrame * CFrame.Angles(0, math.rad(math.random(-10, 10)), 0) + offset})
        f:Play()
        f.Completed:Wait()
    end
    while autoFarm do
        local z = findCoin()
        if z then
            moveToCoin(z)
            local h = z:FindFirstChild("CoinVisual")
            while h and not h:GetAttribute("Collected") and h.Parent and autoFarm do
                local x = findCoin()
                if x and x ~= z then
                    break
                end
                task.wait(0.1 + math.random(0, ANTI_CHEAT_DELAY))
            end
        end
        task.wait(math.random(0.1, 0.3))
    end
end

-- Auto-Shoot when Sheriff and Autofarm is Active
local function checkLineOfSight(startPos, endPos)
    local raycastParams = RaycastParams.new()
    raycastParams.FilterDescendantsInstances = {localplayer.Character, Workspace:FindFirstChild("CoinContainer")}
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
    raycastParams.IgnoreWater = true
    local raycastResult = Workspace:Raycast(startPos, (endPos - startPos).Unit * (endPos - startPos).Magnitude, raycastParams)
    return not raycastResult or raycastResult.Instance:IsDescendantOf(findMurderer().Character)
end

RunService.Heartbeat:Connect(function()
    if not autoFarm or not isScriptRunning then return end
    if findSheriff() == localplayer then
        local murderer = findMurderer()
        if murderer and murderer.Character and murderer.Character:FindFirstChild("HumanoidRootPart") and localplayer.Character and localplayer.Character:FindFirstChild("HumanoidRootPart") then
            local startPos = localplayer.Character.HumanoidRootPart.Position
            local endPos = murderer.Character.HumanoidRootPart.Position
            if checkLineOfSight(startPos, endPos) then
                task.spawn(shootMurderer)
            end
        end
    end
end)

Workspace.ChildAdded:Connect(function(ch)
    if ch == getMap() and espActive then
        task.spawn(function()
            task.wait(math.random(1, 2))
            if findMurderer() then
                reloadESP()
            end
        end)
    end
end)

Workspace.ChildRemoved:Connect(function(ch)
    if ch == getMap() and espActive then
        playerData = {}
        espcontainer:ClearAllGroups()
    end
end)

localplayer.CharacterAdded:Connect(function()
    task.wait(math.random(0.5, 1.5))
    if autoFarm then
        task.spawn(autoFarmCoins)
    end
    if espActive then
        reloadESP()
    end
end)

Players.PlayerAdded:Connect(function(player)
    if player ~= localplayer then
        player.CharacterAdded:Connect(function()
            if espActive then
                task.wait(math.random(0.5, 1.5))
                reloadESP()
            end
        end)
    end
end)

Players.PlayerRemoving:Connect(function()
    if espActive then
        task.wait(math.random(0.5, 1.5))
        reloadESP()
    end
end)

-- GUI setup
local playerGui = localplayer:WaitForChild("PlayerGui")
local gui = Instance.new("ScreenGui", playerGui)
gui.Name = "zX9qW2"
gui.ResetOnSpawn = false
gui.IgnoreGuiInset = true

-- TopBar (kéo được & thu gọn)
local topBar = Instance.new("TextButton")
topBar.Name = "TopBar"
topBar.Size = UDim2.new(0, 140, 0, 25)
topBar.Position = UDim2.new(0.1, 0, 0.2, 0)
topBar.BackgroundColor3 = Color3.fromRGB(180, 180, 255)
topBar.Text = "DhuyxDtuyen"
topBar.TextSize = 14
topBar.Font = Enum.Font.SourceSansBold
topBar.TextColor3 = Color3.new(0,0,0)
topBar.Draggable = true
topBar.Active = true
topBar.Selectable = true
topBar.Parent = gui

-- Frame chứa các nút
local buttonFrame = Instance.new("Frame")
buttonFrame.Name = "MainFrame"
buttonFrame.Size = UDim2.new(0, 140, 0, 220)
buttonFrame.AnchorPoint = Vector2.new(0, 1)
buttonFrame.BackgroundColor3 = Color3.fromRGB(255, 179, 186)
buttonFrame.Visible = true
buttonFrame.Position = UDim2.new(0.1, 0, 0.2, 25)
buttonFrame.Parent = topBar

-- Layout căn nút
local layout = Instance.new("UIListLayout", buttonFrame)
layout.Padding = UDim.new(0, 5)
layout.HorizontalAlignment = Enum.HorizontalAlignment.Center
layout.SortOrder = Enum.SortOrder.LayoutOrder

-- Tạo hàm nhanh để thêm nút
local function createButton(name, text)
	local btn = Instance.new("TextButton")
	btn.Name = name
	btn.Text = text
	btn.Size = UDim2.new(0, 120, 0, 25)
	btn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	btn.TextColor3 = Color3.fromRGB(0, 0, 0)
	btn.Font = Enum.Font.SourceSansBold
	btn.TextSize = 12
	btn.ZIndex = 2
	btn.AutoButtonColor = true
	btn.Selectable = true
	btn.Active = true
	btn.Parent = buttonFrame
	return btn
end

-- Các nút gốc (giữ nguyên tên để hoạt động đúng)
local autoFarmBtn = createButton("jH4mP8", "AutoFarm (Off)")
local shootBtn = createButton("tR7nY5", "Shoot")
local espBtn = createButton("uP5kQ3", "ESP (Off)")
local autoGunBtn = createButton("vQ2zW9", "AutoGun")
local flingMurdererBtn = createButton("flingMurderer", "Fling Murderer")
local flingSheriffBtn = createButton("flingSheriff", "Fling Sheriff")
local killAllBtn = createButton("killAll", "Kill All")

-- Tương thích mobile (ZIndex cao, Selectable, Active)
for _, btn in ipairs(buttonFrame:GetChildren()) do
	if btn:IsA("TextButton") then
		btn.ZIndex = 5
		btn.Selectable = true
		btn.Active = true
	end
end

-- Gắn sự kiện Toggle mở rộng / thu gọn
local collapsed = false
topBar.MouseButton1Click:Connect(function()
	collapsed = not collapsed
	buttonFrame.Visible = not collapsed
end)

-- AutoFarm Toggle
autoFarmBtn.MouseButton1Click:Connect(function()
    autoFarm = not autoFarm
    autoFarmBtn.Text = "AutoFarm (" .. (autoFarm and "On" or "Off") .. ")"
    if autoFarm then
        task.spawn(autoFarmCoins)
    end
end)

-- Shoot Murderer
shootBtn.MouseButton1Click:Connect(function()
    task.spawn(shootMurderer)
end)

espBtn.MouseButton1Click:Connect(function()
    espActive = not espActive
    espBtn.Text = "ESP (" .. (espActive and "On" or "Off") .. ")"
    if espActive then
        reloadESP()
    else
        espcontainer:ClearAllGroups()
    end
end)

autoGunBtn.MouseButton1Click:Connect(function()
    local map = getMap()
    if not map or not map:FindFirstChild("GunDrop") then
        fu.notification("No dropped gun to be teleported to.")
        return
    end
    local hrp = localplayer.Character and localplayer.Character:FindFirstChild("HumanoidRootPart")
    if hrp then
        local previousPosition = hrp.CFrame
        hrp.CFrame = map:FindFirstChild("GunDrop"):GetPivot() + Vector3.new(0, 2, 0)
        localplayer.Backpack.ChildAdded:Wait()
        hrp.CFrame = previousPosition
        fu.notification("Gun picked up.")
    else
        fu.notification("No valid character to teleport.")
    end
end)
-- Fling Murderer
flingMurdererBtn.MouseButton1Click:Connect(function()
    local target = findMurderer()
    if target then
        miniFling(target)
    else
        warn("Không tìm thấy murderer.")
    end
end)

-- Fling Sheriff
flingSheriffBtn.MouseButton1Click:Connect(function()
    local target = findSheriff()
    if target then
        miniFling(target)
    else
        warn("Không tìm thấy sheriff.")
    end
end)

killAllBtn.MouseButton1Click:Connect(function()
    if findMurderer() ~= localplayer then
        fu.notification("You're not murderer.")
        return
    end

    if not localplayer.Character:FindFirstChild("Knife") then
        local hum = localplayer.Character:FindFirstChild("Humanoid")
        if localplayer.Backpack:FindFirstChild("Knife") then
            hum:EquipTool(localplayer.Backpack:FindFirstChild("Knife"))
            task.wait(0.1)
        else
            fu.notification("You don't have the knife..?")
            return
        end
    end

    for _, player in ipairs(game.Players:GetPlayers()) do
        if player ~= localplayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local targetPart = player.Character:FindFirstChild("HumanoidRootPart")
            targetPart.Anchored = true
            targetPart.CFrame = localplayer.Character:FindFirstChild("HumanoidRootPart").CFrame + localplayer.Character:FindFirstChild("HumanoidRootPart").CFrame.LookVector * 1
            task.wait(0.05)
        end
    end

    local args = { [1] = "Slash" }
    localplayer.Character.Knife.Stab:FireServer(unpack(args))
    task.wait(0.1)
    for _, player in ipairs(game.Players:GetPlayers()) do
        if player ~= localplayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            player.Character:FindFirstChild("HumanoidRootPart").Anchored = false
        end
    end
end)

function miniFling(playerToFling)
    local character = localplayer.Character
    local humanoid = character and character:FindFirstChildOfClass("Humanoid")
    local rootPart = humanoid and humanoid.RootPart
    local targetCharacter = playerToFling.Character
    if not character or not humanoid or not rootPart or not targetCharacter then
        fu.notification("No valid character of said target player. May have died.")
        return
    end

    local targetHumanoid = targetCharacter:FindFirstChildOfClass("Humanoid")
    local targetRoot = targetHumanoid and targetHumanoid.RootPart
    local targetHead = targetCharacter:FindFirstChild("Head")
    local accessory = targetCharacter:FindFirstChildOfClass("Accessory")
    local handle = accessory and accessory:FindFirstChild("Handle")

    if rootPart and rootPart.Velocity.Magnitude < 50 then
        getgenv().OldPos = rootPart.CFrame
    end

    local function flingPart(part)
        local duration = 2
        local startTime = tick()
        local angle = 0
        repeat
            if rootPart and targetHumanoid and part then
                if part.Velocity.Magnitude < 50 then
                    angle = angle + 100
                    rootPart.CFrame = CFrame.new(part.Position) * CFrame.new(0, 1.5, 0) * CFrame.Angles(math.rad(angle), 0, 0)
                    character:SetPrimaryPartCFrame(rootPart.CFrame)
                    rootPart.Velocity = Vector3.new(9e7, 9e7 * 10, 9e7)
                    rootPart.RotVelocity = Vector3.new(9e8, 9e8, 9e8)
                    task.wait()
                else
                    rootPart.CFrame = CFrame.new(part.Position) * CFrame.new(0, 1.5, targetHumanoid.WalkSpeed) * CFrame.Angles(math.rad(90), 0, 0)
                    character:SetPrimaryPartCFrame(rootPart.CFrame)
                    task.wait()
                end
            else
                break
            end
        until part.Velocity.Magnitude > 500 or not part.Parent or not targetCharacter or targetHumanoid.Sit or humanoid.Health <= 0 or tick() > startTime + duration
    end

    workspace.FallenPartsDestroyHeight = 0/0
    local bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.Name = "EpixVel"
    bodyVelocity.Parent = rootPart
    bodyVelocity.Velocity = Vector3.new(9e8, 9e8, 9e8)
    bodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
    humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false)

    if targetRoot and targetHead then
        if (targetRoot.CFrame.p - targetHead.CFrame.p).Magnitude > 5 then
            flingPart(targetHead)
        else
            flingPart(targetRoot)
        end
    elseif targetRoot then
        flingPart(targetRoot)
    elseif targetHead then
        flingPart(targetHead)
    elseif handle then
        flingPart(handle)
    else
        fu.notification("Can't find a proper part of target player to fling.")
    end

    bodyVelocity:Destroy()
    humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
    workspace.CurrentCamera.CameraSubject = humanoid
    repeat
        rootPart.CFrame = getgenv().OldPos * CFrame.new(0, 0.5, 0)
        character:SetPrimaryPartCFrame(rootPart.CFrame)
        humanoid:ChangeState("GettingUp")
        for _, part in ipairs(character:GetChildren()) do
            if part:IsA("BasePart") then
                part.Velocity = Vector3.new()
                part.RotVelocity = Vector3.new()
            end
        end
        task.wait()
    until (rootPart.Position - getgenv().OldPos.p).Magnitude < 25
    workspace.FallenPartsDestroyHeight = getgenv().FPDH or -500
end

-- Input bindings
UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
    if gameProcessedEvent or not isScriptRunning then return end
    if input.KeyCode == Enum.KeyCode.T then
        espActive = not espActive
        xy.Text = "ESP (" .. (espActive and "On" or "Off") .. ")"
        if espActive then
            reloadPlayerESP()
        else
            clearESP()
        end
    elseif input.UserInputType == Enum.UserInputType.MouseButton3 then
        task.spawn(shootMurderer)
    elseif input.KeyCode == Enum.KeyCode.Z then
        autoFarm = not autoFarm
        vw.Text = "AutoFarm (" .. (autoFarm and "On" or "Off") .. ")"
        if autoFarm then
            task.spawn(autoFarmCoins)
        end
    end
end)

local function reloadESP()
    if not espActive then return end
    espcontainer:RemoveGroup("players")
    for _, player in ipairs(Players:GetPlayers()) do
        if player.Character and player ~= localplayer then
            task.spawn(function()
                if player == findMurderer() then
                    espcontainer:Add(player.Character, {
                        AccentColor = Color3.new(1, 0, 0.0156863),
                        ArrowShow = true,
                        ArrowMinDistance = 999999,
                        ArrowSize = UDim2.new(0, 40, 0, 40),
                        LabelText = "Murderer",
                        ShowLabel = true,
                        GroupName = "players"
                    })
                elseif player == findSheriff() then
                    espcontainer:Add(player.Character, {
                        AccentColor = Color3.new(0, 0.6, 1),
                        ArrowShow = false,
                        ShowLabel = false,
                        GroupName = "players"
                    })
                else
                    espcontainer:Add(player.Character, {
                        AccentColor = Color3.new(0, 1, 0.0313725),
                        ArrowShow = false,
                        ShowLabel = false,
                        GroupName = "players"
                    })
                end
            end)
        end
    end
end

-- Initialize
local function initialize()
    local success = pcall(function()
        localplayer:WaitForChild("PlayerGui", 10)
        ReplicatedStorage:WaitForChild("Remotes", 10):WaitForChild("Gameplay", 10):WaitForChild("PlayerDataChanged", 10)
    end)
    if not success or not isMurderMystery2() then
        return
    end
    isScriptRunning = true
    pcall(function()
        local gameplay = ReplicatedStorage.Remotes.Gameplay.PlayerDataChanged
        gameplay.OnClientEvent:Connect(function(data)
            playerData = data
            if espActive then
                reloadPlayerESP()
            end
        end)
    end)
    if espActive then
        reloadPlayerESP()
    end
end

-- Biến để theo dõi trạng thái hiển thị của GUI
local guiVisible = true

-- Đặt ban đầu trạng thái của GUI
gui.Enabled = guiVisible

local collapsed = false

topBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        collapsed = not collapsed
        buttonFrame.Visible = not collapsed
    end
end)

pcall(initialize)
